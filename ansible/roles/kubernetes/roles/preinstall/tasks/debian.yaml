---
- name: Install packages needed to use the Kubernetes
  apt:
    update_cache: yes
    force: yes
    name:
      - apt-transport-https{{ '=' + version['apt_transport_https'] if version['apt_transport_https'] is defined and version['apt_transport_https'] != 'latest' else '' }}
      - ca-certificates{{ '=' + version['ca_certificates'] if version['ca_certificates'] is defined and version['ca_certificates'] != 'latest' else '' }}
    state: present

- name: Download the Google Cloud public signing key
  get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg
    owner: root
    group: root
    mode: 0644

- name: Create Kubernetes apt repository list file if no exists
  file:
    path: /etc/apt/sources.list.d/kubernetes.list
    state: touch
    mode: 0644
  register: touch_log
  changed_when: touch_log.diff.before.state != "file"

- name: write Kubernetes apt repository in list file
  lineinfile:
    dest: /etc/apt/sources.list.d/kubernetes.list
    line: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main

- name: Install kubelet, kubeadm, kubectl, kubernetes-cni
  apt:
    update_cache: yes
    force: yes
    name:
      - kubelet{{ '=' + version['kubelet'] + '-00' if version['kubelet'] is defined and version['kubelet'] != 'latest' else '' }}
      - kubeadm{{ '=' + version['kubeadm'] + '-00' if version['kubeadm'] is defined and version['kubeadm'] != 'latest' else '' }}
      - kubectl{{ '=' + version['kubectl'] + '-00' if version['kubectl'] is defined and version['kubectl'] != 'latest' else '' }}
      - kubernetes-cni{{ '=' + version['kubernetes_cni'] + '-00' if version['kubernetes_cni'] is defined and version['kubernetes_cni'] != 'latest' else '' }}
    state: present
  notify: kubelet restart

- name: Hold kubelet, kubeadm, kubectl, kubernetes-cni
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  with_items:
    - kubelet
    - kubeadm
    - kubectl
    - kubernetes-cni

- name: Install systemd-resolved
  when: systemd_resolved
  apt:
    name: systemd-resolved
    state: present
  failed_when: false
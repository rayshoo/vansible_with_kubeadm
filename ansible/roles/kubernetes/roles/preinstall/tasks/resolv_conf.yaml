---
- when: systemd_resolved
  block:
  - name: generate systemd_resolved resolved.conf file
    template:
      src: resolved.conf.j2
      dest: /etc/systemd/resolved.conf
      owner: root
      group: root
      mode: 0644
    notify: restart systemd-resolved

  - name: add nameservers when using NetworkManager
    nmcli:
      conn_name: "System {{ iface }}"
      type: ethernet
      dns4: 127.0.0.53
      state: present
    failed_when: false
    notify: restart NetworkManager

  - name: change kubelet resolv-conf to systemd-resolved
    replace:
      path: "{{ item }}/kubelet.service.d/10-kubeadm.conf"
      regexp: '^(ExecStart=)(.*(?=--resolv-conf))--resolv-conf=\S*(.*)'
      replace: '\1\2--resolv-conf=/run/systemd/resolve/resolv.conf\3'
      backup: yes
    with_items:
      - /usr/lib/systemd/system
      - /var/lib/systemd/system
      - /etc/systemd/system
      - /lib/systemd/system
    failed_when: false
    notify: kubelet restart

  - name: set kubelet resolv-conf to systemd-resolved
    replace:
      path: "{{ item }}/kubelet.service.d/10-kubeadm.conf"
      regexp: '^((?:ExecStart=)(?:(?!--resolv-conf).)+)$'
      replace: '\1 --resolv-conf=/run/systemd/resolve/resolv.conf'
      backup: yes
    with_items:
      - /usr/lib/systemd/system
      - /var/lib/systemd/system
      - /etc/systemd/system
      - /lib/systemd/system
    failed_when: false
    notify: kubelet restart

- when: not systemd_resolved
  block:
  - name: Disable and stop systemd-resolved
    systemd:
      name: systemd-resolved
      state: stopped
      enabled: no
    failed_when: false

  - set_fact:
      nameserver_list: "{{ nameserver_list | default('') }} {{ item }}"
    with_items: "{{ nameservers }}"

  - name: set nameservers in /etc/resolv.conf
    replace:
      path: /etc/resolv.conf
      regexp: '^(nameserver).*'
      replace: '\1{{ nameserver_list }}'
      backup: yes

  - name: add nameservers when using NetworkManager
    nmcli:
      conn_name: "System {{ iface }}"
      type: ethernet
      dns4: "{{ nameservers }}"
      state: present
    failed_when: false
    notify: restart NetworkManager

  - name: change kubelet resolv-conf to default resolv
    replace:
      path: "{{ item }}/kubelet.service.d/10-kubeadm.conf"
      regexp: '^(ExecStart=)(.*(?=--resolv-conf))--resolv-conf=\S*(.*)'
      replace: '\1\2--resolv-conf=/etc/resolv.conf\3'
      backup: yes
    with_items:
      - /usr/lib/systemd/system
      - /var/lib/systemd/system
      - /etc/systemd/system
      - /lib/systemd/system
    failed_when: false
    notify: kubelet restart

  - name: set kubelet resolv-conf to default resolv
    replace:
      path: "{{ item }}/kubelet.service.d/10-kubeadm.conf"
      regexp: '^((?:ExecStart=)(?:(?!--resolv-conf).)+)$'
      replace: '\1 --resolv-conf=/etc/resolv.conf '
      backup: yes
    with_items:
      - /usr/lib/systemd/system
      - /var/lib/systemd/system
      - /etc/systemd/system
      - /lib/systemd/system
    failed_when: false
    notify: kubelet restart
---
- when: node_state | int  != 0
  block:
  - name: define pod-network-cidr flag
    when: pod_subnet is defined
    set_fact:
      pod_network_cidr: "--pod-network-cidr={{ pod_subnet }}"
  - name: kubeadm init (version < 1.14)
    when: version['kubeadm'] is version('1.14','<',strict=True)
    shell: |
      kubeadm init {{ pod_network_cidr | default('') }} \
      --apiserver-advertise-address={{ ansible_host }} \
      {% if runtime == 'containerd' %}
      --cri-socket /run/containerd/containerd.sock
      {% elif runtime == 'docker' %}
      --cri-socket /var/run/dockershim.sock
      {% elif runtime == 'cri-o' %}
      --cri-socket /var/run/crio/crio.sock
      {% endif %}
  - name: kubeadm init (1.14 <= version < 1.15)
    when:
      - version['kubeadm'] is version('1.15','<',strict=True)
      - version['kubeadm'] is version('1.14','>=',strict=True)
    shell: |
      kubeadm init {{ pod_network_cidr | default('') }} \
      --apiserver-advertise-address={{ ansible_host }} \
      --experimental-upload-certs \
      {% if runtime == 'containerd' %}
      --cri-socket /run/containerd/containerd.sock
      {% elif runtime == 'docker' %}
      --cri-socket /var/run/dockershim.sock
      {% elif runtime == 'cri-o' %}
      --cri-socket /var/run/crio/crio.sock
      {% endif %}
    register: result
  - name: kubeadm init (1.15 <= version < 1.16)
    when:
      - version['kubeadm'] is version('1.15','>=',strict=True)
      - version['kubeadm'] is version('1.16','<',strict=True)
    shell: |
      kubeadm init {{ pod_network_cidr | default('') }} \
      --apiserver-advertise-address={{ ansible_host }} \
      --upload-certs \
      {% if runtime == 'containerd' %}
      --cri-socket /run/containerd/containerd.sock
      {% elif runtime == 'docker' %}
      --cri-socket /var/run/dockershim.sock
      {% elif runtime == 'cri-o' %}
      --cri-socket /var/run/crio/crio.sock
      {% endif %}
    register: result    
  - name: kubeadm init (1.16 <= version)
    when: version['kubeadm'] is version('1.16','>=',strict=True)
    shell: |
      kubeadm init {{ pod_network_cidr | default('') }} \
      --control-plane-endpoint="{{ ansible_host }}:6443" \
      --apiserver-advertise-address={{ ansible_host }} \
      --upload-certs \
      {% if runtime == 'containerd' %}
      --cri-socket /run/containerd/containerd.sock
      {% elif runtime == 'docker' %}
      --cri-socket /var/run/dockershim.sock
      {% elif runtime == 'cri-o' %}
      --cri-socket /var/run/crio/crio.sock
      {% endif %}
    register: result
  - when: version['kubeadm'] is version('1.14','>=',strict=True)
    block:
    - set_fact:
        count: -1
    - name: include cert.yaml for get certificate
      include: cert.yaml
      with_items: "{{ result['stdout_lines'] }}"
    - name: Get certificate key
      set_fact:
        cert: "{{ result['stdout_lines'][index|int + 1] }}"
  - set_fact:
      node_state: 0

- set_fact:
    join_completed: true

- name: check node join completed
  when: item | int != 0
  set_fact:
    join_completed: false
  with_items: >
    [{% for node in groups['ansible_clients'] %}
    "{{ hostvars[node]['node_state'] }}",
    {% endfor %}]

- when: not join_completed
  block:
  - name: generate a new join command with token
    shell: kubeadm token create --print-join-command
    register: join_command
  - set_fact:
      join_command: "{{ join_command['stdout'] }}"
---
- name: define pod-network-cidr flag
  when: pod_subnet is defined
  set_fact:
    pod_network_cidr: "--pod-network-cidr={{ pod_subnet }}"

- name: kubeadm init (version < 1.16)
  when:
    - node_state.rc != 0
    - version['kubeadm'] is version('1.16','<')
  shell: |
    kubeadm init {{ pod_network_cidr | default('') }} \
    --apiserver-advertise-address={{ ansible_host }} \
    
- name: kubeadm init (version >= 1.16)
  when:
    - node_state.rc != 0
    - version['kubeadm'] is version('1.16','>=')
  shell: |
    kubeadm init {{ pod_network_cidr | default('') }} \
    --control-plane-endpoint="{{ ansible_host }}:6443" \
    --apiserver-advertise-address={{ ansible_host }}

- name: generate a new certificate key
  when:
    - version['kubeadm'] is version('1.15','<')
    - version['kubeadm'] is version('1.14','>=')
  shell: kubeadm init phase upload-certs --experimental-upload-certs
  register: cert

- name: generate a new certificate key
  when: version['kubeadm'] is version('1.15','>=')
  shell: kubeadm init phase upload-certs --upload-certs
  register: cert

- name: Get certificate key
  when: cert is defined
  set_fact:
    cert: "{{ cert['stdout_lines'][-1] }}"

- name: generate a new join command with token
  shell: kubeadm token create --print-join-command
  register: join_command

- set_fact:
    join_command: "{{ join_command['stdout'] }}"

- name: docker install
  when: docker_install
  include_role:
    name: commons/docker
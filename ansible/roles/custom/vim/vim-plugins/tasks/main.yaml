---
- name: Ensure .vim/{autoload,bundle} directory exists
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ target['user'] }}"
    group: "{{ target['user'] }}"
    mode: 0750
  loop:
    - "{{ target['home'] }}/.vim/autoload"
    - "{{ target['home'] }}/.vim/bundle"

- when: ansible_hostname == groups['ansible_master'][0]
  block:
  - name: Git clone vim-plug from remote repository
    git:
      repo: https://github.com/junegunn/vim-plug.git
      dest: "{{ local['home'] }}/downloads/vim-plug"
      version: cffcfe150bda75177920530c5f1911b52f70a065

  - name: change vim-plug owner to {{ local['user'] }}
    file:
      dest: "{{ local['home'] }}/downloads/vim-plug"
      owner: "{{ local['user'] }}"
      group: "{{ local['user'] }}"
      recurse: yes

- name: Copy plug.vim file in {{ target['home'] }}/.vim/autoload
  copy:
    src: "{{ local['home'] }}/downloads/vim-plug/plug.vim"
    dest: "{{ target['home'] }}/.vim/autoload"
    owner: "{{ target['user'] }}"
    group: "{{ target['user'] }}"
    mode: 0664

- name: Create .vimrc file if not exists
  file:
    path: "{{ target['home'] }}/.vimrc"
    state: touch
    owner: "{{ target['user'] }}"
    group: "{{ target['user'] }}"
    mode: 0644
  register: touch_log
  changed_when: touch_log.diff.before.state != "file"

- name: Configure vimrc plugin
  blockinfile: 
    dest: "{{ target['home'] }}/.vimrc"
    block: |
      call plug#begin('~/.vim/plugged')
      Plug 'pearofducks/ansible-vim'
      call plug#end()
    backup: yes
    marker: "\" {mark} ANSIBLE MANAGED BLOCK"
    insertbefore: BOF

- name: Check vim plugin installed
  stat:
    path: "{{ target['home'] }}/.vim/plugged/ansible-vim"
  register: file_check

- name: Install vim plugin
  shell: "vim -E -s -c \"source ~/.vimrc\" -c PlugInstall -c qa"
  register: vim_log
  failed_when: "vim_log.stderr != \"\""
  changed_when: file_check.stat.exists == false

- when: ansible_hostname == groups['ansible_master'][0]
  block:
  - name: Git clone pathogen.vim from remote repository
    git:
      repo: https://github.com/tpope/vim-pathogen.git
      dest: "{{ local['home'] }}/downloads/vim-pathogen"
      version: e0a3efbda5ea8e5b181b2b232ef6453c05d07732

  - name: change vim-pathogen owner to {{ local['user'] }}
    file:
      dest: "{{ local['home'] }}/downloads/vim-pathogen"
      owner: "{{ local['user'] }}"
      group: "{{ local['user'] }}"
      recurse: yes

- name: "Copy pathogen.vim file in {{ target['home'] }}/.vim/autoload"
  copy:
    src: "{{ local['home'] }}/downloads/vim-pathogen/autoload/pathogen.vim"
    dest: "{{ target['home'] }}/.vim/autoload"
    owner: "{{ target['user'] }}"
    group: "{{ target['user'] }}"
    mode: 0664

- name: Unarchive vim-ansible-yaml.tar
  unarchive:
    src: vim-ansible-yaml-1.0.tar.gz
    dest: "{{ target['home'] }}/.vim/bundle/"
    owner: "{{ target['user'] }}"
    group: "{{ target['user'] }}"
    mode: 0775

- name: Configure vimrc syntax
  lineinfile:
    dest: "{{ target['home'] }}/.vimrc"
    line: "{{ item }}"
    insertafter: EOF
    backup: yes
  with_items:
    - set number
    - execute pathogen#infect()
    - syntax on
    - autocmd FileType yaml setlocal ai et ts=2 sw=2 sts=2
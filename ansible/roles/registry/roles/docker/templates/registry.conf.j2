upstream docker-registry {
  server registry:5000;
}

## Set a variable to help us decide if we need to add the
## 'Docker-Distribution-Api-Version' header.
## The registry always sets this header.
## In the case of nginx performing auth, the header is unset
## since nginx is auth-ing before proxying.
map $upstream_http_docker_distribution_api_version $docker_distribution_api_version {
  '' 'registry/2.0';
}

server {
  listen 80;
{% if '@' in registry['docker']['hosts'] %}
  server_name ~^{% for host in registry['docker']['hosts'] %}{{ '' if host == '@' else '(' + host + '\.)?' }}{% endfor %}{{ registry['docker']['common_name'] }};
{% else %}
  server_name{% for host in registry['docker']['hosts'] %} {{ host }}.{{ registry['docker']['common_name'] }}{% endfor %};
{% endif %}

{% if registry['docker']['ssl']['enable'] %}
  return 301 https://$host$request_uri;
{% else %}

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
  chunked_transfer_encoding on;
  
  location /v2/ {
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }

{% if registry['docker']['auth']['enable'] and not not registry['docker']['auth']['account'] | default([]) %}
    # To add basic authentication to v2 use auth_basic setting.
    auth_basic "Registry realm";
    auth_basic_user_file /etc/nginx/htpasswd/.registry;
{% endif %}

    ## If $docker_distribution_api_version is empty, the header is not added.
    ## See the map directive above where this variable is defined.
    add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

    proxy_pass                          http://docker-registry;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
  }
{% endif %}
}
{% if registry['docker']['ssl']['enable'] %}

server {
  listen 443{{ ' ssl' if version['nginx'] | regex_search('\d*') | int > 1 or version['nginx'] | regex_search('\d*') | int == 1 and (version['nginx'] | regex_search('\d*.\d*')).split('.')[1] | int >= 15 else '' }};
{% if '@' in registry['docker']['hosts'] %}
  server_name ~^{% for host in registry['docker']['hosts'] %}{{ '' if host == '@' else '(' + host + '\.)?' }}{% endfor %}{{ registry['docker']['common_name'] }};
{% else %}
  server_name{% for host in registry['docker']['hosts'] %} {{ host }}.{{ registry['docker']['common_name'] }}{% endfor %};
{% endif %}

  # SSL
{% if version['nginx'] | regex_search('\d*') | int < 1 or version['nginx'] | regex_search('\d*') | int == 1 and (version['nginx'] | regex_search('\d*.\d*')).split('.')[1] | int < 15 %}
  ssl on;
{% endif %}
  ssl_certificate /etc/nginx/conf.d/registry/{{ registry['docker']['common_name'] }}.crt;
  ssl_certificate_key /etc/nginx/conf.d/registry/{{ registry['docker']['common_name'] }}.key;
{% if not not registry['docker']['ssl']['cert_pass'] | default('') %}
  ssl_password_file /etc/nginx/conf.d/registry/password;
{% endif %}
  
  # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
  ssl_protocols TLSv1.2{{ ' TLSv1.3' if version['nginx'] == 'latest' or version['nginx'] | regex_search('\d*') | int > 1 or (version['nginx'] | regex_search('\d*') | int == 1 and (version['nginx'] | regex_search('\d*.\d*')).split('.')[1] | int >= 13) else '' }};
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
  chunked_transfer_encoding on;

  location /v2/ {
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }

{% if registry['docker']['auth']['enable'] and not not registry['docker']['auth']['account'] | default([]) %}
    # To add basic authentication to v2 use auth_basic setting.
    auth_basic "Registry realm";
    auth_basic_user_file /etc/nginx/htpasswd/.registry;
{% endif %}

    ## If $docker_distribution_api_version is empty, the header is not added.
    ## See the map directive above where this variable is defined.
    add_header 'Docker-Distribution-Api-Version' $docker_distribution_api_version always;

    proxy_pass                          http://docker-registry;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
  }
}
{% endif %}
---
- when: not registry['docker']['ssl']['enable']
  block:
  - name: Ensure docker directory exists
    file:
      path: /etc/docker
      state: directory
      mode: 0755

  - name: Create daemon.json if no exists
    file:
      path: /etc/docker/daemon.json
      state: touch
      mode: 0644
    register: touch_log
    changed_when: touch_log.diff.before.state != "file"

  - name: write json brace in empty daemon.json
    when: touch_log.diff.before.state != "file"
    lineinfile:
      path: /etc/docker/daemon.json
      line: "{}"

  - name: check registry config exists
    shell: cat /etc/docker/daemon.json | jq -r '."insecure-registries"'
    register: result
    changed_when: false

  - when: result['stdout'] == 'null'
    block:
    - name: create registry config text
      shell: |
        cat /etc/docker/daemon.json | jq -r '."insecure-registries" = ["{{ registry_name }}"]'
      register: docker_config
      changed_when: false
      
    - name: generate registry config file
      copy:
        content: "{{ docker_config['stdout'] }}"
        dest: /etc/docker/daemon.json
      notify: restart docker
  
  - when: result['stdout'] != 'null'
    block:
    - set_fact:
        already_exists: false

    - name: check registry endpoint config exists
      when: registry_name in item
      set_fact:
        already_exists: true
      with_items: "{{ result['stdout_lines'] }}"
      changed_when: false

    - when: not already_exists
      block:
      - name: register registry endpoint
        shell: cat /etc/docker/daemon.json | jq -r '."insecure-registries" + ["{{ registry_name }}"]'
        register: registry_endpoint
        changed_when: false

      - name: create registry added config text
        shell: cat /etc/docker/daemon.json | jq -r '."insecure-registries" = {{ registry_endpoint["stdout"] }}'
        register: docker_config
        changed_when: false

      - name: generate registry added config file
        copy:
          content: "{{ docker_config['stdout'] }}"
          dest: /etc/docker/daemon.json
        notify: restart docker

- when: registry['docker']['ssl']['enable']
  block:
  - name: Ensure docker cert directory exists
    file:
      path: /etc/docker/certs.d/{{ registry_name }}
      state: directory
      mode: 0755
  - name: Copy RootCA cert in docker cert directory
    copy:
      src: "{{ local['home'] }}/downloads/openssl/RootCA.crt"
      dest: /etc/docker/certs.d/{{ registry_name }}
      owner: root
      group: root
      mode: 0644
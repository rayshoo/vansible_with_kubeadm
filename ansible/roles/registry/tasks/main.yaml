---
- when: registry['enable']
  block:
  - when: ansible_hostname == groups['ansible_master'][0]
    block:
    - name: Ensure registry directory exists
      become: no
      file:
        path: "{{ local['home'] }}/downloads/registry"
        state: directory
        mode: 0775

    - name: copy registry namespace.yaml file
      copy:
        src: namespace.yaml
        dest: "{{ local['home'] }}/downloads/registry/namespace.yaml"
        owner: "{{ local['user'] }}"
        group: "{{ local['user'] }}"
        mode: 0664

    - name: create registry namespace
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f {{ local['home'] }}/downloads/registry/namespace.yaml
      register: result
      failed_when: false
      changed_when: result['stderr'] is undefined or result['stderr'] | length == 0

    - name: generate registry volume.yaml file
      template:
        src: volume.j2
        dest: "{{ local['home'] }}/downloads/registry/volume.yaml"
        owner: "{{ local['user'] }}"
        group: "{{ local['user'] }}"
        mode: 0664

    - name: create registry persistent volume, claim
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f {{ local['home'] }}/downloads/registry/volume.yaml
      register: result
      failed_when: false
      changed_when: result['stderr'] is undefined or result['stderr'] | length == 0

    - name: generate registry deployment.yaml file
      template:
        src: deployment.j2
        dest: "{{ local['home'] }}/downloads/registry/deployment.yaml"
        owner: "{{ local['user'] }}"
        group: "{{ local['user'] }}"
        mode: 0644

    - name: create registry deployment
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f {{ local['home'] }}/downloads/registry/deployment.yaml
      register: result
      failed_when: false
      changed_when: result['stderr'] is undefined or result['stderr'] | length == 0

    - name: allow required registry ports to firewalld
      firewalld:
        port: 5000/tcp
        permanent: true
        immediate: yes
        state: enabled
      failed_when: false
    
    - name: set registry config on runtime - 1-1
      when: runtime == 'docker' or 'docker' in builder
      include: docker.yaml

    - name: set registry config on runtime - 1-2
      when: runtime != 'docker'
      include: "{{ runtime }}.yaml"

  - name: set registry config on runtime - 2
    when: not ansible_hostname == groups['ansible_master'][0]
    include: "{{ runtime }}.yaml"

  - meta: flush_handlers
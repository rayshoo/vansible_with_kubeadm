---
- when: ansible_hostname == groups['ansible_master'][0]
  block:
  - name: Ensure registry directory exists
    become: no
    file:
      path: "{{ local['home'] }}/downloads/registry"
      state: directory
      mode: 0775
  - name: copy registry namespace.yaml file
    copy:
      src: namespace.yaml
      dest: "{{ local['home'] }}/downloads/registry/namespace.yaml"
      owner: "{{ local['user'] }}"
      group: "{{ local['user'] }}"
      mode: 0664
  - name: create registry namespace
    shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f {{ local['home'] }}/downloads/registry/namespace.yaml
    register: result
    failed_when: false
    changed_when: "' created' in result['stdout']"

- when: item['enable']
  include_role:
    name: "{{ item['name'] }}"
  with_items:
  - { name: registry/roles/docker, enable: "{{ registry['docker']['enable'] }}" }
  - { name: registry/roles/chartmuseum, enable: "{{ registry['chartmuseum']['enable'] }}" }

- when: ansible_hostname == groups['ansible_master'][0]
  block:
  - name: generate nginx manifest file
    template:
      src: "nginx.yaml.j2"
      dest: "{{ local['home'] }}/downloads/registry/nginx.yaml"
      owner: "{{ local['user'] }}"
      group: "{{ local['user'] }}"
      mode: 0664
  - name: create nginx manifests
    shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f {{ local['home'] }}/downloads/registry/nginx.yaml
    register: result
    failed_when: false
    changed_when: "' created' in result['stdout']"

- name: allow required registry ports to firewalld
  when: item == 'http' or (registry['docker']['enable'] and registry['docker']['ssl']['enable']) or (registry['chartmuseum']['enable'] and registry['chartmuseum']['ssl']['enable'])
  firewalld:
    service: "{{ item }}"
    permanent: true
    immediate: yes
    state: enabled
  with_items:
  - http
  - https
  failed_when: false
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: registry-pv
spec:
  capacity:
    storage: {{ registry['volume']['capacity'] }}
  accessModes:
{% for item in registry['volume']['accessModes'] %}
    - {{ item }}
{% endfor %}
  storageClassName: {{ registry['volume']['storageClassName'] }}
  hostPath:
    path: {{ registry['volume']['path'] }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: registry-pvc
  namespace: registry
spec:
  accessModes:
{% for item in registry['volume']['accessModes'] %}
    - {{ item }}
{% endfor %}
  resources:
    requests:
      storage: {{ registry['volume']['capacity'] }}
  storageClassName: {{ registry['volume']['storageClassName'] }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: registry
  name: registry
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  strategy: {}
  template:
    metadata:
      labels:
        app: registry
    spec:
      nodeName: {{ groups['ansible_master'][0] }}
      restartPolicy: Always
      containers:
      - image: registry:{{ version['registry'] }}
        imagePullPolicy: Always
        name: registry
{% if registry['allow_delete'] %}
        env:
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
{% endif %}
        ports:
        - containerPort: 5000
        resources: {}
        volumeMounts:
          - name: registry-volume
            mountPath: /var/lib/registry/docker/registry/v2
      volumes:
        - name: registry-volume
          persistentVolumeClaim:
            claimName: registry-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: registry
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: registry
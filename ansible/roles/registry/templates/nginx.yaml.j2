#jinja2:lstrip_blocks: True
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      nodeName: {{ groups['ansible_master'][0] }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - nginx
      containers:
      - image: nginx:{{ version['nginx'] }}
        imagePullPolicy: Always
        name: nginx
        env:
        {% if registry['docker']['enable'] %}
        - name: REGISTRY_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: registry
              key: REGISTRY_ADDRESS
        {% endif %}
        ports:
        - containerPort: 80
          hostPort: 80
        {% if (registry['docker']['enable'] and registry['docker']['ssl']['enable']) or (registry['chartmuseum']['enable'] and registry['chartmuseum']['ssl']['enable']) %}
        - containerPort: 443
          hostPort: 443
        {% endif %}
        resources: {}
        {% if registry['docker']['enable'] %}
        volumeMounts:
        - name: registry-config
          mountPath: /etc/nginx/conf.d/registry.conf
          subPath: registry.conf
          readOnly: true
        {% if registry['docker']['ssl']['enable'] %}
        - name: registry-ssl
          mountPath: /etc/nginx/conf.d/registry
          readOnly: true
        {% endif %}
        {% if registry['docker']['auth']['enable'] and not not registry['docker']['auth']['account'] | default([]) %}
        - name: registry-htpasswd
          mountPath: /etc/nginx/htpasswd
          readOnly: true
        {% endif %}
        {% endif %}
      volumes:
      {% if registry['docker']['enable'] %}
      - name: registry-config
        configMap:
          name: registry
          defaultMode: 400
      {% if registry['docker']['ssl']['enable'] %}
      - name: registry-ssl
        secret:
          secretName: registry
          items:
          - key: {{ registry['docker']['common_name'] }}.crt
            path: {{ registry['docker']['common_name'] }}.crt
          - key: {{ registry['docker']['common_name'] }}.key
            path: {{ registry['docker']['common_name'] }}.key
      {% if not not registry['docker']['ssl']['cert_pass'] | default('') %}
          - key: ssl_password
            path: password
      {% endif %}
      {% endif %}
      {% if registry['docker']['auth']['enable'] and not not registry['docker']['auth']['account'] | default([]) %}
      - name: registry-htpasswd
        secret:
          secretName: registry
          items:
          - key: htpasswd
            path: .registry
      {% endif %}
      {% endif %}
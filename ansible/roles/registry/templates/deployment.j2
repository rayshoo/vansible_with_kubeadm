---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: registry
  name: registry
  namespace: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  strategy: {}
  template:
    metadata:
      labels:
        app: registry
    spec:
      nodeName: {{ groups['ansible_master'][0] }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - registry
      containers:
      - image: registry:{{ version['registry'] }}
        imagePullPolicy: Always
        name: registry
{% if registry['allow_delete'] %}
        env:
        - name: REGISTRY_STORAGE_DELETE_ENABLED
          value: "true"
{% endif %}
        ports:
        - containerPort: 5000
        resources: {}
        volumeMounts:
          - name: registry-volume
            mountPath: /var/lib/registry/docker/registry/v2
      volumes:
        - name: registry-volume
          persistentVolumeClaim:
            claimName: registry-pvc
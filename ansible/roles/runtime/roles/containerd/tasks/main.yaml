---
- name: Copy toml binary in path
  copy:
    src: "{{ local['home'] }}/downloads/toml/toml-{{ version['toml_cli'] }}-x86_64-linux/toml"
    dest: /usr/local/bin/toml
    owner: root
    group: root
    mode: 0755

- name: Ensure downloads directory exists
  file:
    path: "{{ local['home'] }}/downloads"
    owner: "{{ local['user'] }}"
    group: "{{ local['user'] }}"
    state: directory
    mode: 0750
  delegate_to: "{{ groups['ansible_master'][0] }}"
  run_once: yes

- name: Download binaries
  get_url:
    url: https://github.com/containerd/containerd/releases/download/v{{ version['containerd'] }}/containerd-{{ version['containerd'] }}-linux-amd64.tar.gz
    dest: "{{ local['home'] }}/downloads/containerd.tar"
    owner: "{{ local['user'] }}"
    group: "{{ local['user'] }}"
    mode: 0644
  delegate_to: "{{ groups['ansible_master'][0] }}"
  run_once: yes

- name: Unarchive containerd binaries archive
  unarchive:
    src: "{{ local['home'] }}/downloads/containerd.tar"
    dest: "{{ local['home'] }}/downloads"
    owner: "{{ local['user'] }}"
    group: "{{ local['user'] }}"
    mode: 0755
  delegate_to: "{{ groups['ansible_master'][0] }}"
  run_once: yes

- name: Copy containerd binaries in PATH
  copy:
    src: "{{ local['home'] }}/downloads/bin/"
    dest: /usr/bin
    owner: root
    group: root
    mode: 0755

- name: Add containerd service
  copy:
    src: containerd.service
    dest: /etc/systemd/system
    owner: root
    group: root
    mode: 0644
  notify: restart containerd

- name: Ensure containerd config folder exists
  file:
    path: /etc/containerd
    state: directory
    mode: 0750

- name: check containerd config file exists
  stat:
    path: /etc/containerd/config.toml
  register: stat_result

- when: not stat_result.stat.exists
  block:
  - name: register default containerd config text
    shell: containerd config default
    register: containerd_config

  - name: generate default containerd config file
    copy:
      content: "{{ containerd_config['stdout'] }}"
      dest: /etc/containerd/config.toml
    notify: restart containerd

- name: check SystemdCgroup config
  shell: |
    toml get /etc/containerd/config.toml \
    'plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options.SystemdCgroup'
  register: result
  changed_when: false
  failed_when: false

- when: result['stdout'] | bool != systemd_cgroup
  block:
  - name: create containerd config text with SystemdCgroup
    shell: |
      toml set /etc/containerd/config.toml \
      'plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options.SystemdCgroup' {{ "true" if systemd_cgroup else "false" }}
    register: containerd_config
  - name: generate containerd config file with SystemdCgroup
    copy:
      content: "{{ containerd_config['stdout'] }}"
      dest: /etc/containerd/config.toml
  - name: delete double quotes
    replace:
      dest: /etc/containerd/config.toml
      regexp: '(SystemdCgroup\s*\=\s*)\"(.*)\"'
      replace: '\1\2'
      backup: yes
    notify: restart containerd

- meta: flush_handlers
---
local:
  user: "{{ lookup('env','USER') }}"
  home: "{{ lookup('env','HOME') }}"

target:
  user: "{{ ansible_env['USER'] }}"
  home: "{{ ansible_env['HOME'] }}"

root_login: yes  # PermitRootLogin

systemd_cgroup: <%= default_systemd_cgroup %>  # https://kubernetes.io/ko/docs/setup/production-environment/container-runtimes/
systemd_resolved: <%= default_systemd_resolved %>
nameservers:
  - 8.8.8.8
  - 8.8.4.4

runtime: <%= default_runrime %>

force_cluster: yes
network_plugin: calico
pod_subnet: 192.168.0.0/16
root_kubeconfig: yes

builder:
  - docker
  - kaniko
allow_insecure: yes

kubernetes_ver: 1.20.2
version:
  runc: 1.0.0-rc95
  containerd: 1.5.2 # https://containerd.io/downloads/
  docker: 20.10.7
  cri_o: "{{ kubernetes_ver | regex_replace('^([0-9]+)\\.([0-9]+).*', '\\1.\\2') }}"
  # dependent
  # kubeadm,kubectl (1.11.2 ~ 1.13.4) : kubernetes-cni (0.6.0)
  # kubeadm,kubectl (1.13.5 ~ 1.13.6) : kubernetes-cni (0.7.5)
  # kubeadm,kubectl (1.14.0 ~ 1.14.2) : kubernetes-cni (0.7.5)
  kubelet: "{{ kubernetes_ver }}"
  kubeadm: "{{ kubernetes_ver }}"
  kubectl: "{{ kubernetes_ver }}"
  kubernetes_cni: 0.8.7

  calico: 3.18
  flannel: 0.14.0
  canal: 3.14

  registry: latest
  apt_transport_https: latest
  ca_certificates: latest
  git: latest
  vim: latest
  yj: 5.0.0
  jq: 1.6
  kaniko: 1.6.0

kaniko:
  build_entry: Dockerfile
  volume:
    path: "{{ local['home'] }}/kaniko/build"
    capacity: 1Gi
    storageClassName: kaniko-volume
    accessModes:
      - ReadWriteOnce

registry:
  enable: yes
  volume:
    path: /data/registry
    capacity: 5Gi
    storageClassName: registry-volume
    accessModes:
      - ReadWriteOnce
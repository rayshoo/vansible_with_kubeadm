---
local:
  user: "{{ lookup('env','USER') }}"
  home: "{{ lookup('env','HOME') }}"

target:
  user: "{{ ansible_env['USER'] }}"
  home: "{{ ansible_env['HOME'] }}"

root_login: yes  # PermitRootLogin

systemd_cgroup: <%= default_systemd_cgroup %>  # https://kubernetes.io/ko/docs/setup/production-environment/container-runtimes/
systemd_resolved: <%= default_systemd_resolved %>
nameservers:
- 8.8.8.8
- 8.8.4.4

runtime: <%= default_runrime %>

force_cluster: yes
network_plugin: <%= cni_plugin %>
pod_subnet: 192.168.0.0/16
root_kubeconfig: yes

kubernetes_ver: 1.20.2
version:
  runc: 1.0.0-rc95
  containerd: 1.6.16 # https://containerd.io/downloads/
  docker: 20.10.10
  cri_o: "{{ kubernetes_ver | regex_replace('^([0-9]+)\\.([0-9]+).*', '\\1.\\2') }}"
  kubelet: "{{ kubernetes_ver }}"
  kubeadm: "{{ kubernetes_ver }}"
  kubectl: "{{ kubernetes_ver }}"
  # dependent
  # kubeadm,kubectl (1.11.2 ~ 1.13.4) : kubernetes-cni (0.6.0)
  # kubeadm,kubectl (1.13.5 ~ 1.13.6) : kubernetes-cni (0.7.5)
  # kubeadm,kubectl (1.14.0 ~ 1.14.2) : kubernetes-cni (0.7.5)
  kubernetes_cni: 0.8.7
  
  calico: 3.18
  flannel: 0.14.0
  canal: 3.14
  
  k9s: 0.24.15
  stern: 1.20.0
  dashboard: 2.3.1

  jenkins: 2.361.3-lts-jdk11
  argocd: 2.5.2 # 'stable' if you want to use latest

  kaniko: 1.6.0
  buildah: latest
  podman: latest
  skopeo: latest

  compose_util:
    docker: 1.29.2
    podman: latest
    kubernetes: 0.6.3

  helm: 3.6.3

  nginx: 1.21.5
  registry: 2.7.1

  metallb: 0.10.2
  
  ingress_controller:
    nginx: 1.0.0

  apt_transport_https: latest
  ca_certificates: latest
  git: latest
  vim: latest
  yj: 5.0.0
  jq: 1.6
  toml_cli: 0.2.3

dashboard:
  service_type: LoadBalancer

cicd:
- jenkins
- argocd

jenkins:
  service_type: LoadBalancer
  volume:
    path: /data/jenkins
    capacity: 5Gi
    storageClassName: jenkins-volume
    accessModes:
    - ReadWriteOnce

argocd:
  ha: yes
  service_type: LoadBalancer

builder:
- docker
- kaniko
- buildah
- podman

compose_util:
- docker
- podman
- kubernetes

<% if metallb_ip_range.length() == 0 %>metallb_ip_range: []
<% else %>metallb_ip_range:
<% for range in metallb_ip_range %>  - <%= range %>
<% end %><% end %>
ingress_controller:
- name: nginx
  service_type: LoadBalancer

git:
  auth_store: true

kaniko:
  build_entry: Dockerfile
  volume:
    path: "{{ local['home'] }}/kaniko/build"
    capacity: 1Gi
    storageClassName: kaniko-volume
    accessModes:
    - ReadWriteOnce

registry:
  docker:
    enable: yes
    common_name: m1.dev
    hosts:
    - '@'
    - registry
    ssl:
      enable: yes
      cert_pass: docker registry is a private container repository
    allow_delete: yes
    auth:
      enable: yes
      file_name: .registry
      account:
      - name: admin
        password: admin
    volume:
      path: /data/registry
      capacity: 5Gi
      storageClassName: registry-volume
      accessModes:
      - ReadWriteOnce
  chartmuseum:
    enable: yes
    ssl:
      enable: no

ssl:
  force: no
  ip_address: 
  common_name: 
  hosts: []
  ca_cert_pass: vansinetes - Easy k8s cluster creation in virtual machines
  sub_cert_pass: 
  public_key: no
  pkcs12: yes  # May not work depending on Ansible and Python version

auth:
  file_name: {}
  account: {}
